
name: debugger
env:
    TZ: Asia/Shanghai

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: install dependencies
        run: |
            sudo apt install -y jq curl tar gzip openssl unzip

      - name: prepare
        run: |
            KEY_FILE=upload_secret
            TOKEN_FILE=upload_token
            DEPLOY_URL_FILE=deploy_url
            SUBSCRIBE_FILE=subscribe
            if test "x${{ secrets.upload_secret }}" != "x"
            then
                echo "${{ secrets.upload_secret }}" > $KEY_FILE
            fi
            if test "x${{ secrets.upload_token }}" != "x"
            then
                echo "${{ secrets.upload_token }}" > $TOKEN_FILE
            fi
            if test "x${{ secrets.deploy_url }}" != "x"
            then
                echo "${{ secrets.deploy_url }}" > $DEPLOY_URL_FILE
            fi
            if test "x${{ secrets.subscribe }}" != "x"
            then
                echo "${{ secrets.subscribe }}" > $SUBSCRIBE_FILE
            fi
            if test -r $KEY_FILE && test -r $TOKEN_FILE && test -r $DEPLOY_URL_FILE && test -r $SUBSCRIBE_FILE
            then
                echo 发布到指定地址，
                echo deploy='true' >> $GITHUB_ENV
            fi
            if test ! -r $SUBSCRIBE_FILE
            then
                echo 上传到artifact,
                echo artifact='true' >> $GITHUB_ENV
            fi
            if test ! -r $SUBSCRIBE_FILE
            then
                echo 没有节点，生成一个示例，
                echo 'tg://http?server=1.2.3.4&port=233&user=user&pass=pass&remarks=Example' > $SUBSCRIBE_FILE
            fi

      - name: run subconverter
        run: |
            echo 下载subconverter,
            curl -s -L -O $(curl -s -L 'https://api.github.com/repos/tindy2013/subconverter/releases' | jq -r '.[0].assets[]| select(.name == "subconverter_linux64.tar.gz").browser_download_url')
            tar -zxf subconverter_linux64.tar.gz
            cd subconverter
            echo 更改base_path以便支持缓存base配置文件，
            mv pref.example.ini pref.ini
            mv pref.example.toml pref.toml
            mv pref.example.yml pref.yml
            sed -i 's/^base_path=.*/base_path=_SubConfig/' pref.ini
            echo 运行subconverter
            ./subconverter >/dev/null 2>&1 &

      - name: cache external config
        run: |
            branch=${GITHUB_REF#refs/heads/}
            repository=${GITHUB_REPOSITORY#*/}
            echo 下载当前项目，只需要最新一个版本代码，所以不需要clone，
            curl -s -L -o "$repository.zip" "https://github.com/$GITHUB_REPOSITORY/archive/refs/heads/$branch.zip"
            unzip -q $repository.zip
            mv "$repository-$branch" subconverter/_SubConfig
            echo 下载ACL4SSR，用的比较多的一个规则仓库，
            curl -s -L -o "ACL4SSR.zip" "https://github.com/ACL4SSR/ACL4SSR/archive/refs/heads/master.zip"
            unzip -q ACL4SSR.zip
            mv "ACL4SSR-master" subconverter/_ACL4SSR
            echo 替换配置文件, 包含以上仓库的地址，改成本地地址以加速，
            function replace_url() {
                from=$1
                to=$2
                from=$(echo $from|sed 's/\//\\\//g')
                sed -i "s/$from/$to/g" subconverter/_SubConfig/*.*
            }
            replace_url "https://github.com/$GITHUB_REPOSITORY/raw/$branch" _SubConfig
            replace_url "https://github.com/ACL4SSR/ACL4SSR/raw/master" _ACL4SSR


      - name: update config
        run: |
            SUBSCRIBE_FILE=subscribe
            default_config="_SubConfig/subconverter.ini"
            params="emoji=true&list=false&udp=false&tfo=false&scv=false&fdn=false&sort=false&new_name=true"
            mkdir -p subconverter/sub
            echo 先整理出订阅数组，
            cat subscribe |jq -srR 'split("\n")|map(select(length > 0))' > subscribe.json
            echo 再下载节点列表，方便后面复用避免重复请求机场订阅，
            cat subscribe.json |jq -r 'map(select(startswith("http")and(startswith("https://t.me/")|not)))' |jq -r 'to_entries[]|"curl -s -L -o subconverter/sub/"+(.key|tostring)+" "+(.value|@sh)' |sh
            echo 订阅转成本地请求，其他链接保留，
            url=$(cat subscribe.json |jq -r 'to_entries|map(if (.value|(startswith("http")and(startswith("https://t.me/")|not))) then (.key|tostring|"sub/"+.) else .value end)|join("|")|@uri')
            echo 拼接自己需要的配置请求，
            mkdir -p config
            for suffix in "" "-basic" "-break"
            do
                for target in "clash" "quan" "v2ray" "ssr"
                do
                    config=$(echo ${default_config/%.ini/${suffix}.ini} |jq -rR @uri)
                    echo "curl -s -L -o config/$target$suffix -w '%{http_code}' \"http://127.0.0.1:25500/sub?target=$target&url=$url&config=$config&$params\"" >> update.sh
                done
            done
            chmod +x update.sh

      - name: Setup Debug Session
        env:   
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: csexton/debugger-action@master
